services:
  nginx:
    container_name: reverse-proxy
    image: nginx:latest
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./frontend/dist/spa:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
    - ./.env
    expose: # to nginx (reverse-proxy)
      - "${VUE_PORT}"

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ~/.gradle:/root/.gradle
      - ./backend/src:/app/src 
      - ./backend/target:/app/target
    expose: # to nginx (reverse-proxy)
      - "${SPRING_PORT}"
    env_file:
      - ./.env
    command: ./gradlew bootRun
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    container_name: db-mysql
    image: mysql:latest
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    expose: # to backend
      - "${DB_PORT}"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mysql-data:
